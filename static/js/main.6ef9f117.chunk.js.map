{"version":3,"sources":["modules/api.ts","components/ArtifactCard.tsx","components/CharacterCard.tsx","components/WeaponCard.tsx","modules/formatting.ts","components/Selection.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getArticles","url","a","fetch","then","res","ok","json","get","ArtifactCard","props","useState","item","setItem","useEffect","API","type","article","name","rarity","bonus2","bonus4","className","src","alt","width","height","repeat","undefined","CharacterCard","console","log","vision","weapon","nation","affiliation","birthday","Date","description","constellation","passives","skills","constellations","id","role","toDateString","slice","map","c","i","s","p","WeaponCard","attack","substat","location","passivename","passivedesc","stylizeString","t","charAt","toUpperCase","length","substr","Selection","articles","setArticles","selectedArticle","setSelectedArticle","onChange","event","target","value","onSelectionUpdate","GPFormats","setView","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAGaA,EAAW,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EAClBC,MAAM,2BAA2BF,GACrCG,MAAK,SAAAC,GACJ,OAAKA,EAAIC,GAGFD,EAAIE,OAFF,OAJY,2CAAH,sDAUXC,EAAG,uCAAG,WAAOP,GAAP,SAAAC,EAAA,+EACVC,MAAM,2BAA2BF,GACrCG,MAAK,SAAAC,GACJ,OAAKA,EAAIC,GAGFD,EAAIE,OAFF,OAJI,2CAAH,sD,OCFHE,EAAoC,SAACC,GAEhD,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAaA,OAXAC,qBAAU,WACRC,EAAQL,EAAMM,KAAO,IAAMN,EAAMO,SAASb,MAAK,SAAAC,GAC7CQ,EAAQ,CACNK,KAAMb,EAAG,KACTc,OAAQd,EAAG,WACXe,OAAQf,EAAI,iBACZgB,OAAQhB,EAAI,wBAGf,CAACK,IAGF,qBAAKY,UAAU,YAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBACEC,IAAK,2BAA2Bb,EAAMM,KAAK,IAAIN,EAAMO,QAAQ,kBAC7DK,UAAU,0BACVE,IAAI,MACJC,MAAO,IACPC,OAAQ,QAGZ,qBAAKJ,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,gBAA4BV,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAMM,OAClC,oBAAGI,UAAU,YAAb,UAAyB,wCAAzB,YAA0CV,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAMQ,UAChD,oBAAGE,UAAU,YAAb,UAAyB,wCAAzB,YAA0CV,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAMS,UAChD,mBAAGC,UAAU,YAAb,SAAyB,gCAAQ,eAAKK,YAAwBC,KAAb,OAAJhB,QAAI,IAAJA,OAAA,EAAAA,EAAMO,QAAuB,EAAIP,EAAKO,uBCvBlFU,EAAqC,SAACnB,GAEjD,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAsBA,OApBAC,qBAAU,WACRC,EAAQL,EAAMM,KAAO,IAAMN,EAAMO,SAASb,MAAK,SAAAC,GAC7CyB,QAAQC,IAAI1B,GACZQ,EAAQ,CACNK,KAAMb,EAAG,KACTc,OAAQd,EAAG,OACX2B,OAAQ3B,EAAG,OACX4B,OAAQ5B,EAAG,OACX6B,OAAQ7B,EAAG,OACX8B,YAAa9B,EAAG,YAChB+B,SAAU,IAAIC,KAAKhC,EAAG,UACtBiC,YAAajC,EAAG,YAChBkC,cAAelC,EAAG,cAClBmC,SAAUnC,EAAG,eACboC,OAAQpC,EAAG,aACXqC,eAAgBrC,EAAG,sBAGtB,CAACK,IAGD,sBAAKY,UAAU,YAAf,UACG,qBAAIA,UAAU,eAAeqB,GAAG,QAAQC,KAAK,UAA7C,UACE,oBAAItB,UAAU,WAAWsB,KAAK,eAA9B,SACE,wBAAQtB,UAAU,kBAAkBqB,GAAG,WAAW,iBAAe,MAAM,iBAAe,QAAQ3B,KAAK,SAAS4B,KAAK,MAAM,gBAAc,OAAO,gBAAc,OAA1J,oBAEF,oBAAItB,UAAU,WAAWsB,KAAK,eAA9B,SACE,wBAAQtB,UAAU,WAAWqB,GAAG,cAAc,iBAAe,MAAM,iBAAe,WAAW3B,KAAK,SAAS4B,KAAK,MAAM,gBAAc,UAAU,gBAAc,QAA5J,8BAEF,oBAAItB,UAAU,WAAWsB,KAAK,eAA9B,SACE,wBAAQtB,UAAU,WAAWqB,GAAG,cAAc,iBAAe,MAAM,iBAAe,UAAU3B,KAAK,SAAS4B,KAAK,MAAM,gBAAc,SAAS,gBAAc,QAA1J,sBAEF,oBAAItB,UAAU,WAAWsB,KAAK,eAA9B,SACE,wBAAQtB,UAAU,WAAWqB,GAAG,cAAc,iBAAe,MAAM,iBAAe,YAAY3B,KAAK,SAAS4B,KAAK,MAAM,gBAAc,WAAW,gBAAc,QAA9J,2BAGJ,sBAAKtB,UAAU,cAAcqB,GAAG,eAAhC,UACE,qBAAKrB,UAAU,4BAA4BqB,GAAG,OAAOC,KAAK,WAAW,kBAAgB,WAArF,SACE,sBAAKtB,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,gBAA4BV,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAMM,OAClC,oBAAII,UAAU,gCAAd,SAA8C,yCAAQV,QAAR,IAAQA,OAAR,EAAQA,EAAMuB,YAAd,YAA6BvB,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMsB,YACjF,mBAAGZ,UAAU,YAAb,gBAA0BV,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAM0B,cAChC,qBAAIhB,UAAU,MAAd,UACE,oBAAIA,UAAU,WAAd,oBACA,oBAAIA,UAAU,WAAd,gBAA0BV,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAMoB,SAChC,oBAAIV,UAAU,WAAd,oBACA,oBAAIA,UAAU,WAAd,gBAA0BV,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAMqB,SAChC,oBAAIX,UAAU,WAAd,2BACA,oBAAIA,UAAU,WAAd,gBAA0BV,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAM2B,gBAChC,oBAAIjB,UAAU,WAAd,sBACA,oBAAIA,UAAU,WAAd,gBAA0BV,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAMwB,SAASS,eAAeC,MAAM,EAAG,SAEnE,mBAAGxB,UAAU,YAAb,SAAyB,gCAAQ,eAAKK,YAAwBC,KAAb,OAAJhB,QAAI,IAAJA,OAAA,EAAAA,EAAMO,QAAuB,EAAIP,EAAKO,iBAGvF,qBAAKG,UAAU,gBAAgBqB,GAAG,UAAUC,KAAK,WAAW,kBAAgB,cAA5E,SACE,qBAAKtB,UAAU,YAAf,gBAEIV,QAFJ,IAEIA,OAFJ,EAEIA,EAAM8B,eAAeK,KAAI,SAACC,EAAGC,GAAJ,OACvB,gCACE,qBAAI3B,UAAU,aAAd,cAA6B2B,EAAE,EAA/B,KAAoCD,EAAC,QACrC,mBAAG1B,UAAU,YAAb,SAA0B0B,EAAC,cAC3B,iCAMV,qBAAK1B,UAAU,gBAAgBqB,GAAG,SAASC,KAAK,WAAW,kBAAgB,aAA3E,SACE,qBAAKtB,UAAU,YAAf,gBAEIV,QAFJ,IAEIA,OAFJ,EAEIA,EAAM6B,OAAOM,KAAI,SAAAG,GAAC,OAChB,gCACE,oBAAI5B,UAAU,aAAd,SAA4B4B,EAAC,OAC7B,mBAAG5B,UAAU,YAAb,SAA0B4B,EAAC,cAC3B,iCAMV,qBAAK5B,UAAU,gBAAgBqB,GAAG,WAAWC,KAAK,WAAW,kBAAgB,eAA7E,SACE,qBAAKtB,UAAU,YAAf,gBAEIV,QAFJ,IAEIA,OAFJ,EAEIA,EAAM4B,SAASO,KAAI,SAAAI,GAAC,OAClB,gCACE,oBAAI7B,UAAU,aAAd,SAA4B6B,EAAC,OAC7B,mBAAG7B,UAAU,YAAb,SAA0B6B,EAAC,cAC3B,wCCjGPC,EAAkC,SAAC1C,GAE9C,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAiBA,OAfAC,qBAAU,WACRC,EAAQL,EAAMM,KAAO,IAAMN,EAAMO,SAASb,MAAK,SAAAC,GAC7CQ,EAAQ,CACNK,KAAMb,EAAG,KACTc,OAAQd,EAAG,OACXW,KAAMX,EAAG,KACTgD,OAAQhD,EAAG,WACXiD,QAASjD,EAAG,QACZkD,SAAUlD,EAAG,SACbmD,YAAanD,EAAG,YAChBoD,YAAapD,EAAG,mBAGnB,CAACK,IAGF,qBAAKY,UAAU,YAAf,SACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,gBAA4BV,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAMM,OAClC,oBAAII,UAAU,gCAAd,SAA8C,uCAAQV,QAAR,IAAQA,OAAR,EAAQA,EAAMI,SAC5D,oBAAGM,UAAU,YAAb,iBAA0BV,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAMyC,OAAhC,gBAA8CzC,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAM0C,WACpD,oBAAGhC,UAAU,YAAb,UAAyB,0CAASV,QAAT,IAASA,OAAT,EAASA,EAAM4C,YAAf,OAAzB,WAAgE5C,QAAhE,IAAgEA,OAAhE,EAAgEA,EAAM6C,eACtE,mBAAGnC,UAAU,YAAb,SAAyB,gCAAQ,eAAKK,YAAwBC,KAAb,OAAJhB,QAAI,IAAJA,OAAA,EAAAA,EAAMO,QAAuB,EAAIP,EAAKO,sBC7BlFuC,EAAgB,SAACR,GAE5B,IADA,IAAIS,EAAYT,EAAEU,OAAO,GAAGC,cACnBZ,EAAI,EAAGA,EAAIC,EAAEY,OAAO,EAAGb,IACjB,MAATC,EAAED,GACAA,EAAIC,EAAEY,OAAO,GAA0B,OAArBZ,EAAEa,OAAOd,EAAE,EAAG,IAClCU,GAAK,KACLV,MAGAU,GAAK,IAAMT,EAAED,EAAE,GAAGY,cAClBZ,KAIFU,GAAKT,EAAED,GAGX,OAAOU,EAAKT,EAAEA,EAAEY,OAAO,ICpBZE,EAA6B,SAACtD,GAEzC,MAAgCC,mBAAwB,IAAxD,mBAAOsD,EAAP,KAAiBC,EAAjB,KACA,EAA8CvD,mBAAiB,IAA/D,mBAAOwD,EAAP,KAAwBC,EAAxB,KAEAtD,qBAAU,WACRC,EAAgBL,EAAMM,MAAMZ,MAAK,SAAAC,GAC/B6D,EAAY7D,QAEb,CAACK,IAqBJ,OACE,eAAC,WAAD,WACE,sBAAKY,UAAU,0BAAf,UACE,sBAAMA,UAAU,mBAAmBqB,GAAG,iBAAtC,SAAwDjC,EAAMM,OAC9D,wBAAQM,UAAU,cAAc+C,SAAU,SAAAC,GAAK,OAvB3B,SAACA,GACzBF,EAAmBE,EAAMC,OAAOC,OAsBuBC,CAAkBH,IAArE,SAEEL,EAASlB,KAAI,SAAA9B,GAAO,OAClB,wBAAsBuD,MAAOvD,EAA7B,SAAuCyD,EAAwBzD,IAAlDA,WArBP,WACd,GAAwB,KAApBkD,EAAwB,CAC1B,GAAmB,cAAfzD,EAAMM,KACR,OAAO,cAAC,EAAD,CAAcA,KAAMN,EAAMM,KAAMC,QAASkD,IAE7C,GAAmB,eAAfzD,EAAMM,KACb,OAAO,cAAC,EAAD,CAAeA,KAAMN,EAAMM,KAAMC,QAASkD,IAE9C,GAAmB,YAAfzD,EAAMM,KACb,OAAO,cAAC,EAAD,CAAYA,KAAMN,EAAMM,KAAMC,QAASkD,KAkB9CQ,OCtCOC,G,MAZH,WACV,OACE,qBAAKtD,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,UACE,cAAC,EAAD,CAAWN,KAAK,cAChB,cAAC,EAAD,CAAWA,KAAK,eAChB,cAAC,EAAD,CAAWA,KAAK,mBCIT6D,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB3E,MAAK,YAAkD,IAA/C4E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6ef9f117.chunk.js","sourcesContent":["// Module: api\n// For making GET requests to api.genshin.dev.\n\nexport const getArticles = async (url: string): Promise<Array<string>> => {\n  return fetch(\"https://api.genshin.dev/\"+url)\n    .then(res => {\n      if (!res.ok) {\n        return [];\n      }\n      return res.json();\n  });\n}\n\nexport const get = async (url: string): Promise<any> => {\n  return fetch(\"https://api.genshin.dev/\"+url)\n    .then(res => {\n      if (!res.ok) {\n        return {};\n      }\n      return res.json();\n  });\n}","import React, { useEffect, useState } from 'react';\nimport * as API from '../modules/api';\nimport { CardProps } from '../modules/formatting';\n\ninterface Artifact {\n  name: string;\n  rarity: number;\n  bonus2: string;\n  bonus4: string;\n}\n\nexport const ArtifactCard: React.FC<CardProps> = (props: CardProps) => {\n\n  const [item, setItem] = useState<Artifact>();\n\n  useEffect(() => {\n    API.get(props.type + \"/\" + props.article).then(res => {\n      setItem({\n        name: res[\"name\"],\n        rarity: res[\"max_rarity\"],\n        bonus2: res[\"2-piece_bonus\"],\n        bonus4: res[\"4-piece_bonus\"]\n      } as Artifact);\n    });\n  }, [props]);\n\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"row g-0\">\n        <div className=\"col-md-4\">\n          <img \n            src={\"https://api.genshin.dev/\"+props.type+\"/\"+props.article+\"/flower-of-life\"} \n            className=\"img-fluid rounded-start\" \n            alt=\"...\" \n            width={256} \n            height={256}\n          />\n        </div>\n        <div className=\"col-md-8\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{item?.name}</h5>\n            <p className=\"card-text\"><u>2-piece</u>: {item?.bonus2}</p>\n            <p className=\"card-text\"><u>4-piece</u>: {item?.bonus4}</p>\n            <p className=\"card-text\"><small>{\"⭐️\".repeat(item?.rarity === undefined ? 0 : item.rarity)}</small></p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport * as API from '../modules/api';\nimport { CardProps } from '../modules/formatting';\n\n\ninterface Character {\n  name: string;\n  rarity: number;\n  vision: string;\n  weapon: string;\n  nation: string;\n  affiliation: string;\n  birthday: Date;\n  description: string;\n  constellation: string;\n  passives: Array<any>;\n  skills: Array<any>;\n  constellations: Array<any>;\n}\n\nexport const CharacterCard: React.FC<CardProps> = (props: CardProps) => {\n\n  const [item, setItem] = useState<Character>();\n\n  useEffect(() => {\n    API.get(props.type + \"/\" + props.article).then(res => {\n      console.log(res);\n      setItem({\n        name: res[\"name\"],\n        rarity: res[\"rarity\"],\n        vision: res[\"vision\"],\n        weapon: res[\"weapon\"],\n        nation: res[\"nation\"],\n        affiliation: res[\"affiliation\"],\n        birthday: new Date(res[\"birthday\"]),\n        description: res[\"description\"],\n        constellation: res[\"constellation\"],\n        passives: res[\"passiveTalents\"],\n        skills: res[\"skillTalents\"],\n        constellations: res[\"constellations\"]\n      } as Character);\n    });\n  }, [props]);\n\n  return (\n     <div className=\"card mb-3\">\n        <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n          <li className=\"nav-item\" role=\"presentation\">\n            <button className=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#home\" type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Home</button>\n          </li>\n          <li className=\"nav-item\" role=\"presentation\">\n            <button className=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#profile\" type=\"button\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Constellations</button>\n          </li>\n          <li className=\"nav-item\" role=\"presentation\">\n            <button className=\"nav-link\" id=\"contact-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#skills\" type=\"button\" role=\"tab\" aria-controls=\"skills\" aria-selected=\"false\">Skills</button>\n          </li>\n          <li className=\"nav-item\" role=\"presentation\">\n            <button className=\"nav-link\" id=\"contact-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#passives\" type=\"button\" role=\"tab\" aria-controls=\"passives\" aria-selected=\"false\">Passives</button>\n          </li>\n        </ul>\n        <div className=\"tab-content\" id=\"myTabContent\">\n          <div className=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{item?.name}</h5>\n              <h6 className=\"card-subtitle mb-2 text-muted\"><small>{item?.affiliation}, {item?.nation}</small></h6>\n              <p className=\"card-text\">{item?.description}</p>\n              <dl className=\"row\">\n                <dt className=\"col-sm-3\">Vision</dt>\n                <dd className=\"col-sm-9\">{item?.vision}</dd>\n                <dt className=\"col-sm-3\">Weapon</dt>\n                <dd className=\"col-sm-9\">{item?.weapon}</dd>\n                <dt className=\"col-sm-3\">Constellation</dt>\n                <dd className=\"col-sm-9\">{item?.constellation}</dd>\n                <dt className=\"col-sm-3\">Birthday</dt>\n                <dd className=\"col-sm-9\">{item?.birthday.toDateString().slice(3, 10)}</dd>\n              </dl>\n              <p className=\"card-text\"><small>{\"⭐️\".repeat(item?.rarity === undefined ? 0 : item.rarity)}</small></p>\n            </div>\n          </div>\n          <div className=\"tab-pane fade\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\n            <div className=\"card-body\">\n              {\n                item?.constellations.map((c, i) => (\n                  <div>\n                    <h5 className=\"card-title\">C{i+1}: {c[\"name\"]}</h5>\n                    <p className=\"card-text\">{c[\"description\"]}</p>\n                    <br/>\n                  </div>\n                ))\n              }\n            </div>\n          </div>\n          <div className=\"tab-pane fade\" id=\"skills\" role=\"tabpanel\" aria-labelledby=\"skills-tab\">\n            <div className=\"card-body\">\n              {\n                item?.skills.map(s => (\n                  <div>\n                    <h5 className=\"card-title\">{s[\"name\"]}</h5>\n                    <p className=\"card-text\">{s[\"description\"]}</p>\n                    <br/>\n                  </div>\n                ))\n              }\n            </div>\n          </div>\n          <div className=\"tab-pane fade\" id=\"passives\" role=\"tabpanel\" aria-labelledby=\"passives-tab\">\n            <div className=\"card-body\">\n              {\n                item?.passives.map(p => (\n                  <div>\n                    <h5 className=\"card-title\">{p[\"name\"]}</h5>\n                    <p className=\"card-text\">{p[\"description\"]}</p>\n                    <br/>\n                  </div>\n                ))\n              }\n            </div>\n          </div>\n        </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport * as API from '../modules/api';\nimport { CardProps } from '../modules/formatting';\n\ninterface Weapon {\n  name: string;\n  rarity: number;\n  type: string;\n  attack: number;\n  substat: string;\n  location: string;\n  passivename: string;\n  passivedesc: string;\n}\n\nexport const WeaponCard: React.FC<CardProps> = (props: CardProps) => {\n\n  const [item, setItem] = useState<Weapon>();\n\n  useEffect(() => {\n    API.get(props.type + \"/\" + props.article).then(res => {\n      setItem({\n        name: res[\"name\"],\n        rarity: res[\"rarity\"],\n        type: res[\"type\"],\n        attack: res[\"baseAttack\"],\n        substat: res[\"subStat\"],\n        location: res[\"location\"],\n        passivename: res[\"passiveName\"],\n        passivedesc: res[\"passiveDesc\"]\n      } as Weapon);\n    });\n  }, [props]);\n\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"row g-0\">\n        <div className=\"col-md-8\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{item?.name}</h5>\n            <h6 className=\"card-subtitle mb-2 text-muted\"><small>{item?.type}</small></h6>\n            <p className=\"card-text\">{item?.attack} ATK, {item?.substat}</p>\n            <p className=\"card-text\"><strong>{item?.passivename}:</strong> {item?.passivedesc}</p>\n            <p className=\"card-text\"><small>{\"⭐️\".repeat(item?.rarity === undefined ? 0 : item.rarity)}</small></p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// Module: formatting\n// Functions for formatting strings and commonly used custom interfaces.\n\n// A set of props used in all card components. \n// A type (i.e. \"artifacts\") and a article (i.e. \"noblesse-oblige\").\nexport interface CardProps {\n  type: string;\n  article: string;\n}\n\n// Returns a version of the input string with \n// - leading uppercase letters, \n// - spaces instead of dashes, and \n// - correct placement of possessive character ('s).\nexport const stylizeString = (s: string): string => {\n  var t: string = s.charAt(0).toUpperCase();\n  for (var i = 1; i < s.length-1; i++) {\n    if (s[i] === \"-\") {\n      if (i < s.length-2 && s.substr(i+1, 2) === \"s-\") {\n        t += \"'s\";\n        i++;\n      }\n      else {\n        t += \" \" + s[i+1].toUpperCase();\n        i++;\n      }\n    }\n    else {\n      t += s[i];\n    }\n  }\n  return t += s[s.length-1];\n}\n","import React, { ChangeEvent, Fragment, useEffect, useState } from 'react';\nimport { ArtifactCard } from './ArtifactCard';\nimport { CharacterCard } from './CharacterCard';\nimport { WeaponCard } from './WeaponCard';\nimport * as GPFormats from '../modules/formatting';\nimport * as API from '../modules/api';\n\ninterface Props {\n  type: string;\n}\n\nexport const Selection: React.FC<Props> = (props: Props) => {\n\n  const [articles, setArticles] = useState<Array<string>>([]);\n  const [selectedArticle, setSelectedArticle] = useState<string>(\"\");\n\n  useEffect(() => {\n    API.getArticles(props.type).then(res => {\n      setArticles(res);\n    });\n  }, [props]);\n  \n  const onSelectionUpdate = (event: ChangeEvent<HTMLSelectElement>): void => {\n    setSelectedArticle(event.target.value);\n  }\n  \n  // A clumsy way of displaying the content resulting from this Selection.\n  const setView = () => {\n    if (selectedArticle !== \"\") {\n      if (props.type === \"artifacts\") {\n        return <ArtifactCard type={props.type} article={selectedArticle}/>;\n      }\n      else if (props.type === \"characters\") {\n        return <CharacterCard type={props.type} article={selectedArticle}/>;\n      }\n      else if (props.type === \"weapons\") {\n        return <WeaponCard type={props.type} article={selectedArticle}/>;\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className=\"input-group flex-nowrap\">\n        <span className=\"input-group-text\" id=\"addon-wrapping\">{props.type}</span>\n        <select className=\"form-select\" onChange={event => onSelectionUpdate(event)}>\n        {\n          articles.map(article => (\n            <option key={article} value={article}>{GPFormats.stylizeString(article)}</option>\n          ))\n        }\n        </select>\n      </div>\n      {\n        setView()\n      }\n    </Fragment>\n  );\n};\n","import React from 'react';\nimport { Selection } from './components/Selection'\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"GPSearch\">\n        <Selection type='artifacts'/>\n        <Selection type='characters'/>\n        <Selection type='weapons'/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}